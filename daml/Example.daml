{-# LANGUAGE AllowAmbiguousTypes #-}

module Example where

import Daml.Script
import qualified Remy.Numeric.Rounding as N

modes =
  [ N.RoundingUp
  , N.RoundingDown
  , N.RoundingCeling
  , N.RoundingFloor
  , N.RoundingHalfUp
  , N.RoundingHalfDown
  , N.RoundingHalfEven
  ]

example1Data : [Numeric 2]
example1Data = [0.55, 0.25, 0.16, 0.11, 0.10, -0.10, -0.11, -0.16, -0.25, -0.55]

example1 : Script [[Numeric 2]]
example1 = script $
  pure $ map (\m -> map (N.roundAt @1 m) example1Data) modes

example2Data : [Decimal]
example2Data = [0.055, 0.025, 0.016, 0.011, 0.010, -0.010, -0.011, -0.016, -0.025, -0.055]

example2 : Script [[Decimal]]
example2 = script $
  pure $ map (\m -> map (N.roundDecimalAtInt 2 m) example2Data) modes
